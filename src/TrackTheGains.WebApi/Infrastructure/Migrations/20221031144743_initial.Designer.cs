// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrackTheGains.WebApi.Infrastructure;

#nullable disable

namespace TrackTheGains.WebApi.Infrastructure.Migrations
{
    [DbContext(typeof(FitnessContext))]
    [Migration("20221031144743_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-rc.2.22472.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.FinishedExercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("WorkoutSessionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("WorkoutSessionId");

                    b.ToTable("FinishedExercises");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.Repetition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid?>("SetId")
                        .HasColumnType("uuid");

                    b.Property<int>("WeightsInKg")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SetId");

                    b.ToTable("Repetitions");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.Set", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("FinishedExerciseId")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FinishedExerciseId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.WorkoutSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EndingTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartingTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("WorkoutSessions");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.Workouts.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("WorkoutId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("exercises", "fitness");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.Workouts.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("workouts", "fitness");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.FinishedExercise", b =>
                {
                    b.HasOne("TrackTheGains.WebApi.Workouts.Exercise", "Exercises")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackTheGains.WebApi.WorkoutSessions.WorkoutSession", null)
                        .WithMany("FinishedExercises")
                        .HasForeignKey("WorkoutSessionId");

                    b.Navigation("Exercises");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.Repetition", b =>
                {
                    b.HasOne("TrackTheGains.WebApi.WorkoutSessions.Set", null)
                        .WithMany("Repetitions")
                        .HasForeignKey("SetId");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.Set", b =>
                {
                    b.HasOne("TrackTheGains.WebApi.WorkoutSessions.FinishedExercise", null)
                        .WithMany("Sets")
                        .HasForeignKey("FinishedExerciseId");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.WorkoutSession", b =>
                {
                    b.HasOne("TrackTheGains.WebApi.Workouts.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.Workouts.Exercise", b =>
                {
                    b.HasOne("TrackTheGains.WebApi.Workouts.Workout", "Workout")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.FinishedExercise", b =>
                {
                    b.Navigation("Sets");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.Set", b =>
                {
                    b.Navigation("Repetitions");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.WorkoutSessions.WorkoutSession", b =>
                {
                    b.Navigation("FinishedExercises");
                });

            modelBuilder.Entity("TrackTheGains.WebApi.Workouts.Workout", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
